{"version":3,"sources":["components/ScrollToTop.tsx","components/Link.tsx","components/Footer.tsx","components/RouteWithLayout.tsx","layouts/Main/components/Topbar.tsx","layouts/Main/Main.tsx","layouts/Minimal/Minimal.tsx","pages/MainPage/index.tsx","pages/MinimalPage/index.tsx","pages/NotMadeYet/index.tsx","Routes.tsx","serviceWorker.ts","theme.tsx","index.tsx"],"names":["ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","isInternalURL","to","URL","location","origin","hostname","Link","props","disabled","Container","href","undefined","component","NavLink","useStyles","makeStyles","theme","footerRoot","footerContainer","minHeight","Footer","className","classes","Grid","container","direction","justifyContent","alignItems","clsx","item","Typography","variant","color","align","Date","getFullYear","RouteWithLayout","Layout","layout","Component","layoutprops","rest","render","matchProps","root","flexGrow","menuButton","marginRight","spacing","title","drawer","Topbar","useState","sidebarIsOpen","setSidebarIsOpen","AppBar","position","Toolbar","IconButton","edge","onClick","Button","Drawer","anchor","paper","onClose","open","content","paddingTop","Main","children","params","useParams","console","log","minimalRoot","main","leftSide","backgroundColor","palette","primary","Minimal","xs","MainPage","JSON","stringify","MinimalPage","NotMadeYet","Routes","exact","path","push","search","encodeURIComponent","state","from","Boolean","match","createMuiTheme","secondary","error","red","A400","background","default","components","MuiButton","variants","style","customValues","primaryFontFamily","secondaryFontFamily","customColor","ReactDOM","ThemeProvider","CssBaseline","basename","process","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e85b50f2.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import { Container } from '@material-ui/core';\nimport { default as MaterialUILink, LinkTypeMap } from '@material-ui/core/Link';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst isInternalURL = (to: string) => {\n  try {\n    const url = new URL(to, window.location.origin);\n    return url.hostname === window.location.hostname;\n  } catch {\n    return false;\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const Link = <D extends React.ElementType = LinkTypeMap['defaultComponent'], P = Record<string, unknown>>(\n  // trying to fix this type is needlessly difficult\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props: any\n) => {\n  return props.disabled ? (\n    <Container {...props} />\n  ) : (\n    <MaterialUILink\n      {...props}\n      //internal vs external links\n      href={!isInternalURL(props.to) ? props.to : undefined}\n      component={isInternalURL(props.to) ? NavLink : 'a'}\n      to={isInternalURL(props.to) ? props.to : '/'}\n    />\n  );\n};\n","import { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { CustomTheme } from '../theme';\nimport { ClassNameProps } from '../utils/types';\nimport { Link } from './Link';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  footerRoot: {},\n  footerContainer: { minHeight: 100 },\n}));\n\nconst Footer = (props: ClassNameProps) => {\n  const { className } = props;\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"space-between\"\n      alignItems=\"stretch\"\n      className={clsx(classes.footerRoot, className)}\n    >\n      <Grid item container justifyContent=\"center\" alignItems=\"center\" className={classes.footerContainer}>\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          {'Copyright Â© '}\n          <Link color=\"inherit\" to=\"https://material-ui.com/\">\n            Your Website\n          </Link>{' '}\n          {new Date().getFullYear()}\n          {'.'}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Footer;\n","import React, { ElementType } from 'react';\nimport { Route, RouteComponentProps, RouteProps } from 'react-router-dom';\n\nexport interface RouteWithLayoutProps extends RouteProps {\n  layout: ElementType;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  layoutprops?: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nconst RouteWithLayout = (props: RouteWithLayoutProps) => {\n  const { layout: Layout, component: Component, layoutprops, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={(matchProps) => (\n        <Layout layoutprops={layoutprops}>\n          <Component {...matchProps} />\n        </Layout>\n      )}\n    />\n  );\n};\nexport default RouteWithLayout;\n","import { AppBar, Button, Drawer, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport React, { useState } from 'react';\nimport { CustomTheme } from '../../../theme';\nimport { ClassNameProps } from '../../../utils/types';\n\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  root: {},\n  flexGrow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawer: {},\n}));\nconst Topbar = (props: ClassNameProps) => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const [sidebarIsOpen, setSidebarIsOpen] = useState(false);\n\n  return (\n    <>\n      <AppBar {...rest} position=\"relative\" className={clsx(classes.root, className)}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            onClick={() => setSidebarIsOpen(!sidebarIsOpen)}\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title} component=\"div\">\n            App\n          </Typography>\n          <Button color=\"inherit\">Button</Button>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        anchor=\"left\"\n        classes={{ paper: classes.drawer }}\n        onClose={() => setSidebarIsOpen(false)}\n        open={sidebarIsOpen}\n        variant=\"temporary\"\n      >\n        <div className={clsx(classes.root, className)}>\n          <Button>Example link</Button>\n        </div>\n      </Drawer>\n    </>\n  );\n};\n\nexport default Topbar;\n","import { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Footer } from '../../components';\nimport { CustomTheme } from '../../theme';\nimport { ClassNameChildrenProps } from '../../utils/types';\nimport Topbar from './components/Topbar';\n\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  root: {},\n  content: { paddingTop: theme.spacing(10) },\n}));\n\nconst Main = (props: ClassNameChildrenProps) => {\n  const { className, children, ...rest } = props;\n  const classes = useStyles();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const params = useParams() as any;\n  console.log(params);\n\n  return (\n    <div\n      className={clsx(\n        {\n          [classes.root]: true,\n        },\n        className\n      )}\n    >\n      <Topbar {...rest} />\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\n        <main className={classes.content}>\n          {children}\n          <Footer />\n        </main>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Main;\n","import { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { Footer } from '../../components';\nimport { CustomTheme } from '../../theme';\nimport { LayoutProps } from '../../utils/types';\n\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  minimalRoot: {},\n  main: {\n    minHeight: '300px',\n  },\n  leftSide: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  content: {},\n}));\n\nconst Minimal = (props: LayoutProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { children, layoutprops } = props;\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"space-between\"\n        alignItems=\"stretch\"\n        className={classes.minimalRoot}\n      >\n        <Grid item container justifyContent=\"center\" alignItems=\"stretch\">\n          <Grid item container xs={12} justifyContent=\"center\" alignItems=\"stretch\" className={classes.main}>\n            <Grid item xs={6} justifyContent=\"center\" alignItems=\"center\" container className={classes.leftSide}>\n              <Typography variant=\"h2\">Appname</Typography>\n            </Grid>\n            <Grid item justifyContent=\"center\" alignItems=\"center\" container xs={6}>\n              <main className={classes.content}>{children}</main>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Footer />\n      </Grid>\n    </>\n  );\n};\n\nexport default Minimal;\n","import { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from '../../components';\nimport { CustomTheme } from '../../theme';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  root: {},\n}));\n\nexport const MainPage = () => {\n  const classes = useStyles();\n  const params = useParams();\n  return (\n    <div className={classes.root}>\n      <h1>Main Page!</h1>\n      <Link to=\"/\">Back to minimal page</Link>\n      <pre>{JSON.stringify(params)}</pre>\n    </div>\n  );\n};\n","import { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from '../../components';\nimport { CustomTheme } from '../../theme';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  root: {},\n}));\n\nexport const MinimalPage = () => {\n  const classes = useStyles();\n  const params = useParams();\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" className={classes.root}>\n      <Grid item>\n        <div className={classes.root}>\n          <h1>First Page!</h1>\n          <Link to=\"/main/page-name\">Route: main page</Link>\n          <br />\n          <Link to=\"/doesntexist\">Route: page that doesnt exist</Link>\n          <br />\n\n          <pre>{JSON.stringify(params)}</pre>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n","import { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from '../../components';\nimport { CustomTheme } from '../../theme';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  root: {},\n}));\n\nexport const NotMadeYet = () => {\n  const classes = useStyles();\n  const params = useParams();\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" className={classes.root}>\n      <Grid item>\n        <h1>Page Not Found!</h1>\n        <br />\n\n        <Link to=\"/\">Back Home</Link>\n        <br />\n\n        <pre>{JSON.stringify(params)}</pre>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from 'react';\nimport { Redirect, Switch } from 'react-router-dom';\nimport { RouteWithLayout } from './components';\nimport Main from './layouts/Main/Main';\nimport Minimal from './layouts/Minimal/Minimal';\nimport { MainPage } from './pages/MainPage';\nimport { MinimalPage } from './pages/MinimalPage';\nimport { NotMadeYet } from './pages/NotMadeYet';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <RouteWithLayout component={MinimalPage} exact layout={Minimal} layoutprops={{}} path={['/']} />\n\n      <RouteWithLayout component={MainPage} exact layout={Main} path=\"/main/:pageName\" />\n      <RouteWithLayout component={NotMadeYet} exact layout={Minimal} layoutprops={{}} path=\"/404-not-found\" />\n      <Redirect\n        push\n        to={{\n          pathname: '/404-not-found',\n          search: '?from=' + encodeURIComponent(window.location.href),\n          state: { from: window.location.href },\n        }}\n      />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.warn('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme, Theme } from '@material-ui/core/styles';\n\n// A custom theme for this app\n// default theme options:\n// https://next.material-ui.com/customization/default-theme/\n//Add custom params to theme for regular re-use\nexport interface CustomTheme extends Theme {\n  customValues: {\n    primaryFontFamily: string;\n    secondaryFontFamily: string;\n    customColor: string;\n  };\n}\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n  components: {\n    MuiButton: {\n      //custom variants\n      variants: [\n        {\n          // note: Material UI v5 is still working on this, so it doesn't work as of Feb 2021\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          props: { variant: 'custom' as any },\n          style: {\n            backgroundColor: '#00acee',\n            color: '#FFFFFF',\n            '&:hover': {\n              backgroundColor: '#007cad',\n            },\n          },\n        },\n      ],\n    },\n  },\n}) as CustomTheme;\n\ntheme.customValues = {\n  primaryFontFamily: 'Roboto',\n  secondaryFontFamily: 'Arial',\n  customColor: 'green',\n};\n\nexport default theme;\n","import CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './assets/css/index.css';\nimport ScrollToTop from './components/ScrollToTop';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <Router basename={process.env.PUBLIC_URL || '/'}>\n      <ScrollToTop />\n      <Routes />\n    </Router>\n  </ThemeProvider>,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}